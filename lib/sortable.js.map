{"version":3,"sources":["../src/sortable.jsx"],"names":["Sortable","props","listData","value","containerElement","dragItems","dragging","draggingIndex","draggingElement","draggingPlaceholder","startPositionY","startPageY","sorting","sortingStartY","handleMouseDown","bind","handleMouseMove","handleMouseUp","exchangeListItemVertically","removePlaceholderElement","document","addEventListener","nextProps","removeEventListener","setTimeout","placeholderElement","getElementById","removeChild","e","index","dragbtn","target","className","includes","pageY","itemElem","findDOMNode","parentNode","createElement","id","style","height","getBoundingClientRect","backgroundColor","placeholderColor","insertBefore","offsetTop","position","width","left","top","zIndex","diff","clientHeight","Math","abs","onChange","removeAttribute","filter","data","bool","dragNext","nextSibling","placeholder","placePrev","previousSibling","nodeType","slice","appendChild","renderItem","attrKey","map","item","itemKey","Error","ref","propTypes","string","array","func","defaultProps"],"mappings":"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","file":"sortable.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\n\nclass Sortable extends Component {\n    constructor(props) {\n        super(props);\n        this.listData = props.value;\n        \n        this.containerElement = null;\n        this.dragItems = [];\n        \n        this.dragging = false;\n        this.draggingIndex = -1;\n        this.draggingElement = null;\n        this.draggingPlaceholder = null;\n        \n        this.startPositionY = 0;\n        this.startPageY = 0;\n        \n        this.sorting = false;\n        this.sortingStartY = 0;\n        \n        this.handleMouseDown = this.handleMouseDown.bind(this);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n        this.exchangeListItemVertically = this.exchangeListItemVertically.bind(this);\n        this.removePlaceholderElement = this.removePlaceholderElement.bind(this);\n    }\n    \n    componentDidMount() {\n        document.addEventListener('mousemove', this.handleMouseMove, false);\n        document.addEventListener('mouseup', this.handleMouseUp, false);\n    }\n    \n    componentWillReceiveProps(nextProps) {\n        if (nextProps.value) {\n            this.listData = nextProps.value;\n        }\n    }\n    \n    shouldComponentUpdate() {\n        if (!this.dragging) {\n            this.removePlaceholderElement();\n        }\n        return !this.dragging;\n    }\n    \n    componentWillUnmount() {\n        document.removeEventListener('mousemove', this.handleMouseMove, false);\n        document.removeEventListener('mouseup', this.handleMouseUp, false);\n    }\n    \n    removePlaceholderElement() {\n        setTimeout(() => {\n            let placeholderElement = document.getElementById('drag-placeholder');\n            if (placeholderElement && this.containerElement) {\n                this.containerElement.removeChild(placeholderElement);\n            }\n        });\n    }\n    \n    handleMouseDown(e, index) {\n        if (this.props.dragbtn && !e.target.className.includes(this.props.dragbtn)) {\n            return false;\n        }\n        \n        this.dragging = true;\n        \n        this.draggingIndex = index;\n        this.startPageY = e.pageY;\n        \n        let itemElem = ReactDOM.findDOMNode(this.dragItems[index]); // eslint-disable-line\n        this.containerElement = itemElem.parentNode;\n        \n        this.draggingPlaceholder = document.createElement('div');\n        this.draggingPlaceholder.id = 'drag-placeholder';\n        this.draggingPlaceholder.style.height = itemElem.getBoundingClientRect().height + 'px';\n        this.draggingPlaceholder.style.backgroundColor = this.props.placeholderColor;\n        \n        if (this.draggingPlaceholder.parentNode !== this.containerElement) {\n            this.containerElement.insertBefore(this.draggingPlaceholder, itemElem);\n        }\n        \n        let offsetTop = this.draggingPlaceholder.offsetTop;\n        \n        itemElem.style.position = 'absolute';\n        itemElem.style.width = '100%';\n        itemElem.style.left = '0px';\n        itemElem.style.backgroundColor = 'white';\n        itemElem.style.top = offsetTop + 'px';\n        itemElem.style.zIndex = '1000';\n        this.startPositionY = offsetTop;\n        this.sortingStartY = offsetTop;\n        this.draggingElement = itemElem;\n    }\n    \n    handleMouseMove(e) {\n        if (typeof this.draggingIndex !== 'number' || this.draggingIndex < 0) {\n            return;\n        }\n        this.draggingElement.style.top = this.startPositionY + e.pageY - this.startPageY + 'px';\n        \n        // 判断拖拽到了哪个位置\n        let diff = this.draggingElement.offsetTop - this.sortingStartY;\n        let clientHeight = this.draggingPlaceholder.getBoundingClientRect().height;\n\n        if (Math.abs(diff) > clientHeight * 0.7) {\n            this.exchangeListItemVertically(diff > 0);\n        }\n    }\n    \n    handleMouseUp() {\n        const {onChange} = this.props;\n        if (!this.dragging) {\n            return;\n        }\n        if (this.draggingPlaceholder && this.draggingPlaceholder.parentNode === this.containerElement) {\n            this.containerElement.removeChild(this.draggingPlaceholder);\n            this.draggingPlaceholder = null;\n            \n            this.draggingElement.removeAttribute(\"style\");\n        }\n        this.dragging = false;\n        onChange(this.listData.filter(data => !!data));        \n        this.draggingIndex = -1;\n    }\n    \n    /**\n     * 交换相邻的list item\n     * @param  {boolean} bool   true: 向下移动，false: 向上移动\n     * @return {undefined}      [description]\n     */\n    exchangeListItemVertically(bool) {\n        if (this.sorting) {\n            return;\n        }\n        this.sorting = true;\n        let index = this.draggingIndex;\n        \n        let dragNext = this.draggingElement.nextSibling;\n        let placeholder = this.draggingPlaceholder;\n        let placePrev = this.draggingPlaceholder.previousSibling;\n        \n        // 向上交换\n        if (bool && dragNext && dragNext.nodeType === 1) {\n            this.containerElement.insertBefore(dragNext ,placeholder);\n            this.sortingStartY = placeholder.offsetTop;\n            \n            this.listData = [\n                ...this.listData.slice(0, index),\n                this.listData[index + 1],\n                this.listData[index],\n                ...this.listData.slice(index + 2)\n            ];\n            this.draggingIndex++;\n        }\n        // 向下交换\n        if (!bool && placePrev && placePrev.nodeType === 1) {\n            if (dragNext && dragNext.nodeType === 1) {\n                this.containerElement.insertBefore(placePrev, dragNext);\n            }\n            else {\n                this.containerElement.appendChild(placePrev);\n            }\n            this.sortingStartY = placeholder.offsetTop;\n            this.listData = [\n                ...this.listData.slice(0, index - 1),\n                this.listData[index],\n                this.listData[index - 1],\n                ...this.listData.slice(index + 1)\n            ];\n            this.draggingIndex--;\n        }\n        this.sorting = false;\n    }\n    \n    render() {\n        const {renderItem, value, attrKey} = this.props;\n        return value.map((item, index) => {\n            if (!item) {\n                return null;\n            }\n            let itemKey = attrKey ? item[attrKey || 'key'] : item;\n            if (!itemKey) {\n                throw new Error('you should set the key of each');\n            }\n            return (\n                <div\n                    key={itemKey}\n                    ref={ref => {\n                        this.dragItems[index] = ref;\n                    }}\n                    onMouseDown={(e) => {\n                        this.handleMouseDown(e, index);\n                    }}\n                >\n                    {renderItem(item, index)}\n                </div>\n            );\n        });\n    }\n};\n\nSortable.propTypes = {\n    placeholderColor: PropTypes.string,\n    attrKey: PropTypes.string, // key of list item 渲染的key字段\n    value: PropTypes.array, // array 数组\n    dragbtn: PropTypes.string, // the dragable button className if needed. 拖拽按钮，不设置的话任何元素都可以拖拽\n    onChange: PropTypes.func, // callback after dragged 拖拽完成的回调\n    renderItem: PropTypes.func // render function of list item 渲染函数\n}\n\nSortable.defaultProps = {\n    placeholderColor: '#e7f1ff',\n    attrKey: '',\n    value: [],\n    dragbtn: '',\n    onChange: () => {},\n    renderItem: () => null\n}\n\nexport default Sortable;"]}